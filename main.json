{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "languageVersion": "2.1-experimental",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_EXPERIMENTAL_WARNING": "This template uses ARM features that are experimental. Experimental features should be enabled for testing purposes only, as there are no guarantees about the quality or stability of these features. Do not enable these settings for any production usage, or your production environment may be subject to breaking.",
    "_EXPERIMENTAL_FEATURES_ENABLED": [
      "Extensibility"
    ],
    "_generator": {
      "name": "bicep",
      "version": "0.30.23.60470",
      "templateHash": "4141760040521034618"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[deployment().location]",
      "metadata": {
        "description": "The location for the resources deployed in this solution."
      }
    },
    "deploymentNameSuffix": {
      "type": "string",
      "defaultValue": "[utcNow()]",
      "metadata": {
        "description": "The suffix to be added to the deployment name."
      }
    },
    "resourceGroupName": {
      "type": "string",
      "defaultValue": "rg-cs-cspm",
      "metadata": {
        "description": "The name of the resource group."
      }
    },
    "falconClientId": {
      "type": "string",
      "metadata": {
        "description": "The client ID for the Falcon API."
      }
    },
    "falconClientSecret": {
      "type": "securestring",
      "metadata": {
        "description": "The client secret for the Falcon API."
      }
    },
    "appRegistrationAppId": {
      "type": "string",
      "metadata": {
        "description": "The app registration ID for the Azure AD application."
      }
    },
    "uamiName": {
      "type": "string",
      "metadata": {
        "description": "The name of the user-assigned managed identity."
      }
    },
    "deployIOA": {
      "type": "bool",
      "defaultValue": false
    }
  },
  "variables": {
    "keyVaultName": "[format('kv-cspm-{0}', uniqueString(parameters('resourceGroupName')))]"
  },
  "resources": {
    "rg": {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2024-03-01",
      "name": "[parameters('resourceGroupName')]",
      "location": "[parameters('location')]"
    },
    "uami": {
      "existing": true,
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2018-11-30",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "name": "[parameters('uamiName')]",
      "dependsOn": [
        "rg"
      ]
    },
    "script": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('cs-account-deployment-{0}', parameters('deploymentNameSuffix'))]",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "falconClientId": {
            "value": "[parameters('falconClientId')]"
          },
          "falconClientSecret": {
            "value": "[parameters('falconClientSecret')]"
          },
          "appRegistration": {
            "value": "[parameters('appRegistrationAppId')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "languageVersion": "2.1-experimental",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_EXPERIMENTAL_WARNING": "This template uses ARM features that are experimental. Experimental features should be enabled for testing purposes only, as there are no guarantees about the quality or stability of these features. Do not enable these settings for any production usage, or your production environment may be subject to breaking.",
            "_EXPERIMENTAL_FEATURES_ENABLED": [
              "Extensibility"
            ],
            "_generator": {
              "name": "bicep",
              "version": "0.30.23.60470",
              "templateHash": "1165715836654226144"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "falconClientId": {
              "type": "string"
            },
            "falconClientSecret": {
              "type": "securestring"
            },
            "appRegistration": {
              "type": "string"
            }
          },
          "resources": {
            "azureAccount": {
              "type": "Microsoft.Resources/deploymentScripts",
              "apiVersion": "2023-08-01",
              "name": "cs-account-deployment",
              "location": "[parameters('location')]",
              "kind": "AzurePowerShell",
              "properties": {
                "azPowerShellVersion": "10.0",
                "cleanupPreference": "OnSuccess",
                "retentionInterval": "PT1H",
                "arguments": "[format('-clientId {0} -clientSecret {1} -appRegistrationId {2} -tenantId {3} -subscriptionId {4}', parameters('falconClientId'), parameters('falconClientSecret'), parameters('appRegistration'), tenant().tenantId, subscription().subscriptionId)]",
                "scriptContent": "      param(\r\n        [string] $clientId,\r\n        [string] $clientSecret,\r\n        [string] $appRegistrationId,\r\n        [string] $tenantId,\r\n        [string] $subscriptionId\r\n    )\r\n    $ErrorActionPreference = 'Stop'\r\n    # Authenticate to Falcon Cloud Security\r\n    try \r\n    {\r\n      Install-Module -Name PSFalcon -Force\r\n    } \r\n    catch\r\n    {\r\n      Write-Error \"Failed to install PSFalcon module: $_\"\r\n      throw\r\n    }\r\n\r\n    try\r\n    {\r\n      # Build token request\r\n      $Token = @{\r\n        ClientId     = $clientId\r\n        ClientSecret = $clientSecret\r\n      }\r\n      # Request token\r\n      Request-FalconToken @Token\r\n    } \r\n    catch \r\n     {\r\n      Write-Error \"Failed to request Falcon token: $_\"\r\n      throw\r\n    }\r\n\r\n    try \r\n    {\r\n      # Create Azure Account in Falcon Horizon\r\n      New-FalconHorizonAzureAccount -subscriptionId $subscriptionId -TenantId $tenantId -ClientId $appRegistrationId\r\n    }\r\n    catch \r\n    {\r\n      Write-Error \"Failed to create Azure account in Falcon Horizon: $_\"\r\n      throw\r\n    }\r\n\r\n    try \r\n    {\r\n      # Get certificate\r\n      $cert = (Get-FalconHorizonAzureCertificate -TenantId $tenantId).public_certificate\r\n\r\n      # Output certificate\r\n      $DeploymentScriptOutputs['text'] = $cert\r\n      Write-Output $cert\r\n    } \r\n    catch \r\n    {\r\n      Write-Error \"Failed to get or output certificate: $_\"\r\n      throw\r\n    }\r\n    "
              }
            }
          },
          "outputs": {
            "text": {
              "type": "string",
              "value": "[reference('azureAccount').outputs.text]"
            }
          }
        }
      },
      "dependsOn": [
        "rg"
      ]
    },
    "keyVault": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('cs-keyvault-deployment-{0}', parameters('deploymentNameSuffix'))]",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "keyVaultName": {
            "value": "[variables('keyVaultName')]"
          },
          "skuName": {
            "value": "standard"
          },
          "cspmCertificate": {
            "value": "[reference('script').outputs.text.value]"
          },
          "falconClientId": {
            "value": "[parameters('falconClientId')]"
          },
          "falconClientSecret": {
            "value": "[parameters('falconClientSecret')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "languageVersion": "2.1-experimental",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_EXPERIMENTAL_WARNING": "This template uses ARM features that are experimental. Experimental features should be enabled for testing purposes only, as there are no guarantees about the quality or stability of these features. Do not enable these settings for any production usage, or your production environment may be subject to breaking.",
            "_EXPERIMENTAL_FEATURES_ENABLED": [
              "Extensibility"
            ],
            "_generator": {
              "name": "bicep",
              "version": "0.30.23.60470",
              "templateHash": "16918556437729113466"
            }
          },
          "parameters": {
            "keyVaultName": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "skuName": {
              "type": "string",
              "defaultValue": "standard",
              "allowedValues": [
                "standard",
                "premium"
              ]
            },
            "cspmCertificate": {
              "type": "securestring"
            },
            "falconClientId": {
              "type": "string"
            },
            "falconClientSecret": {
              "type": "securestring"
            }
          },
          "resources": {
            "keyVault": {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2022-07-01",
              "name": "[parameters('keyVaultName')]",
              "location": "[parameters('location')]",
              "properties": {
                "tenantId": "[subscription().tenantId]",
                "sku": {
                  "family": "A",
                  "name": "[parameters('skuName')]"
                },
                "enabledForDeployment": true,
                "enabledForTemplateDeployment": true,
                "enabledForDiskEncryption": false,
                "enableRbacAuthorization": true,
                "enableSoftDelete": true,
                "networkAcls": {
                  "bypass": "AzureServices",
                  "defaultAction": "Allow",
                  "ipRules": [],
                  "virtualNetworkRules": []
                },
                "publicNetworkAccess": "Enabled"
              }
            },
            "cert": {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2023-07-01",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), 'falcon-cspm-certificate')]",
              "properties": {
                "value": "[parameters('cspmCertificate')]"
              },
              "dependsOn": [
                "keyVault"
              ]
            },
            "clientId": {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2023-07-01",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), 'falcon-client-id')]",
              "properties": {
                "value": "[parameters('falconClientId')]"
              },
              "dependsOn": [
                "keyVault"
              ]
            },
            "clientSecret": {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2023-07-01",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), 'falcon-client-secret')]",
              "properties": {
                "value": "[parameters('falconClientSecret')]"
              },
              "dependsOn": [
                "keyVault"
              ]
            }
          },
          "outputs": {
            "keyVaultName": {
              "type": "string",
              "value": "[parameters('keyVaultName')]"
            },
            "keyVaultResourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "rg",
        "script"
      ]
    },
    "certificate": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('cs-cert-deployment-{0}', parameters('deploymentNameSuffix'))]",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "appRegistrationId": {
            "value": "[parameters('appRegistrationAppId')]"
          },
          "cspmCertificate": {
            "value": "[reference('script').outputs.text.value]"
          },
          "userAssignedIdentityName": {
            "value": "[parameters('uamiName')]"
          },
          "userAssignedIdentityResourceGroupName": {
            "value": "[split(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.ManagedIdentity/userAssignedIdentities', parameters('uamiName')), '/')[4]]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "languageVersion": "2.1-experimental",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_EXPERIMENTAL_WARNING": "This template uses ARM features that are experimental. Experimental features should be enabled for testing purposes only, as there are no guarantees about the quality or stability of these features. Do not enable these settings for any production usage, or your production environment may be subject to breaking.",
            "_EXPERIMENTAL_FEATURES_ENABLED": [
              "Extensibility"
            ],
            "_generator": {
              "name": "bicep",
              "version": "0.30.23.60470",
              "templateHash": "17953088532217715074"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "appRegistrationId": {
              "type": "string"
            },
            "cspmCertificate": {
              "type": "securestring"
            },
            "userAssignedIdentityName": {
              "type": "string"
            },
            "userAssignedIdentityResourceGroupName": {
              "type": "string"
            }
          },
          "resources": {
            "userAssignedIdentity": {
              "existing": true,
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2018-11-30",
              "resourceGroup": "[parameters('userAssignedIdentityResourceGroupName')]",
              "name": "[parameters('userAssignedIdentityName')]"
            },
            "azureAccount": {
              "type": "Microsoft.Resources/deploymentScripts",
              "apiVersion": "2023-08-01",
              "name": "cs-certificate-deployment",
              "location": "[parameters('location')]",
              "kind": "AzurePowerShell",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('userAssignedIdentityResourceGroupName')), 'Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userAssignedIdentityName')))]": {}
                }
              },
              "properties": {
                "azPowerShellVersion": "10.0",
                "cleanupPreference": "OnSuccess",
                "retentionInterval": "PT1H",
                "arguments": "[format('-appRegistrationId {0} -tenantId {1} -subscriptionId {2} -certificate {3} -userAssignedIdentityClientId {4}', parameters('appRegistrationId'), tenant().tenantId, subscription().subscriptionId, parameters('cspmCertificate'), reference('userAssignedIdentity').clientId)]",
                "scriptContent": "      param(\r\n        [string] $appRegistrationId,\r\n        [string] $tenantId,\r\n        [string] $subscriptionId,\r\n        [string] $certificate,\r\n        [string] $userAssignedIdentityClientId\r\n        )\r\n\r\n      try \r\n      {\r\n        Install-Module Microsoft.Graph -Force\r\n      } \r\n      catch \r\n      {\r\n        Write-Error \"Failed to install Microsoft.Graph module: $_\"\r\n        exit 1\r\n      }\r\n\r\n      try \r\n      {\r\n        $base64Cert = [System.Convert]::FromBase64String($certificate)\r\n      } \r\n      catch \r\n      {\r\n        Write-Error \"Failed to convert certificate from Base64: $_\"\r\n        exit 1\r\n      }\r\n\r\n      try \r\n      {\r\n        Connect-MgGraph -Identity -ClientId $userAssignedIdentityClientId\r\n      } \r\n      catch \r\n      {\r\n        Write-Error \"Failed to connect to Microsoft Graph: $_\"\r\n        exit 1\r\n      }\r\n\r\n      $KeyCredentials = @{\r\n        DisplayName = 'CrowdStrike FCS Certificate'\r\n        StartDateTime = (Get-Date)\r\n        Type  = 'AsymmetricX509Cert'\r\n        Usage = 'Verify'\r\n        Key   = $base64Cert\r\n      }\r\n\r\n      try \r\n      {\r\n        Update-MgApplicationByAppId -AppId $appRegistrationId -KeyCredentials $KeyCredentials\r\n      } \r\n      catch \r\n      {\r\n        Write-Error \"Failed to update application with new key credentials: $_\"\r\n        exit 1\r\n      }\r\n    "
              },
              "dependsOn": [
                "userAssignedIdentity"
              ]
            }
          }
        }
      },
      "dependsOn": [
        "keyVault",
        "rg",
        "script",
        "uami"
      ]
    },
    "roleAssignment": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('cs-role-{0}', parameters('deploymentNameSuffix'))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalId": {
            "value": "[parameters('appRegistrationAppId')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "languageVersion": "2.1-experimental",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_EXPERIMENTAL_WARNING": "This template uses ARM features that are experimental. Experimental features should be enabled for testing purposes only, as there are no guarantees about the quality or stability of these features. Do not enable these settings for any production usage, or your production environment may be subject to breaking.",
            "_EXPERIMENTAL_FEATURES_ENABLED": [
              "Extensibility"
            ],
            "_generator": {
              "name": "bicep",
              "version": "0.30.23.60470",
              "templateHash": "2780020104547747919"
            }
          },
          "parameters": {
            "principalId": {
              "type": "string"
            }
          },
          "variables": {
            "roleDefinitionIds": [
              "39bc4728-0917-49c7-9d2c-d95423bc2eb4",
              "21090545-7ca7-4776-b22c-e363652d74d2",
              "acdd72a7-3385-48ef-bd42-f606fba81ae7",
              "de139f84-1756-47ae-9be6-808fbbe84772",
              "7f6c6a51-bcf8-42ba-9220-52d62157d7db"
            ]
          },
          "resources": {
            "roleAssignment": {
              "copy": {
                "name": "roleAssignment",
                "count": "[length(variables('roleDefinitionIds'))]"
              },
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(parameters('principalId'), variables('roleDefinitionIds')[copyIndex()], subscription().subscriptionId)]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('roleDefinitionIds')[copyIndex()])]",
                "principalId": "[parameters('principalId')]",
                "principalType": "ServicePrincipal"
              }
            }
          }
        }
      },
      "dependsOn": [
        "certificate",
        "keyVault",
        "script"
      ]
    }
  },
  "outputs": {
    "deployIOA": {
      "type": "bool",
      "value": "[parameters('deployIOA')]"
    }
  }
}